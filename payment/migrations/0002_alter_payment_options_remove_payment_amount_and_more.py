# Generated by Django 5.1.4 on 2024-12-20 01:07

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('bookstore', '0002_initial'),
        ('payment', '0001_initial'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='payment',
            options={'ordering': ['-payment_date'], 'verbose_name': '결제', 'verbose_name_plural': '결제 목록'},
        ),
        migrations.RemoveField(
            model_name='payment',
            name='amount',
        ),
        migrations.RemoveField(
            model_name='payment',
            name='book_distribution',
        ),
        migrations.RemoveField(
            model_name='payment',
            name='notes',
        ),
        migrations.AddField(
            model_name='payment',
            name='memo',
            field=models.TextField(blank=True, null=True, verbose_name='메모'),
        ),
        migrations.AddField(
            model_name='payment',
            name='paid_amount',
            field=models.PositiveIntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='납부 금액'),
        ),
        migrations.AddField(
            model_name='payment',
            name='status',
            field=models.CharField(blank=True, choices=[('pending', '미납'), ('partial', '부분납부'), ('completed', '완납'), ('refunded', '환불됨')], default='pending', max_length=10, null=True, verbose_name='납부 상태'),
        ),
        migrations.AddField(
            model_name='payment',
            name='total_amount',
            field=models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='총 금액'),
        ),
        migrations.AlterField(
            model_name='payment',
            name='payment_date',
            field=models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='결제일'),
        ),
        migrations.AlterField(
            model_name='payment',
            name='payment_method',
            field=models.CharField(blank=True, choices=[('cash', '현금'), ('card', '카드'), ('transfer', '계좌이체'), ('other', '기타')], max_length=10, null=True, verbose_name='결제 수단'),
        ),
        migrations.CreateModel(
            name='BookPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_price', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='원래 가격')),
                ('discounted_price', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='할인된 가격')),
                ('book_distribution', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='bookstore.bookdistribution', verbose_name='교재 판매')),
                ('payment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='payment.payment', verbose_name='결제')),
            ],
            options={
                'verbose_name': '교재 결제',
                'verbose_name_plural': '교재 결제 목록',
            },
        ),
        migrations.CreateModel(
            name='PaymentHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='결제 금액')),
                ('payment_method', models.CharField(choices=[('cash', '현금'), ('card', '카드'), ('transfer', '계좌이체'), ('other', '기타')], max_length=10, verbose_name='결제 수단')),
                ('paid_at', models.DateTimeField(auto_now_add=True, verbose_name='결제 시각')),
                ('receipt_no', models.CharField(blank=True, max_length=50, verbose_name='영수증 번호')),
                ('payment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='histories', to='payment.payment', verbose_name='결제')),
            ],
            options={
                'verbose_name': '결제 이력',
                'verbose_name_plural': '결제 이력 목록',
                'ordering': ['-paid_at'],
            },
        ),
    ]
